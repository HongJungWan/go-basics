package main

import "fmt"

const PI = 3.14              // 타입 없는 상수
const FloatPI float64 = 3.14 // float64 타입 상수

func main() {
	var a int = PI * 100
	// var b int = FloatPI * 100

	fmt.Println(a)
}

/*
📌 상수로 사용될 수 있는 타입은 다음과 같다. [불리언, 정수, 복소수, 실수, 문자열, 룬(rune)]
📌 상수는 대입문 좌변에 올 수 없다. -> 왜냐하면 상수는 값으로만 동작하기 때문이다.

📌 타입을 명시하지 않은 상수는 타입이 정해지지 않은 상태로 사용된다.

📌 Go에서 상수는 리터럴과 같이 취급한다. -> 고정된 값 자체로 쓰인 문구가 리터럴이다. -> 컴파일될 때 상수는 리터럴로 변환되어 실행 파일에 쓰인다.
📌 상수 표현식은 컴파일 타임에 실제 결괏값 리터럴로 변환하기 때문에 상수 표현식 계산에 CPU 자원을 사용하지 않는다.
📌 상수의 메모리 주소값에 접근할 수 없는 이유 역시 컴파일 타임에 리터럴로 전환되어서 실행 파일에 값 형태로 쓰이기 때문이다.
📌 즉, 상수는 Heap 영역을 사용하지 않는다.
*/
