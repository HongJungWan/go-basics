package main

import "fmt"

func main() {
	var a int = 500

	var p1 *int
	var p2 *int

	p1 = &a
	p2 = &a

	if p1 != nil && p2 != nil {
		fmt.Printf("p1의 값: %p\n", p1)
		fmt.Printf("p1가 가리키는 메모리의 값: %d\n", *p1)
		fmt.Printf("p1과 p2는 가리키는 메모리 공간이 같은가? %v\n", p1 == p2)
	}

	*p1 = 100 // p1가 가리키는 메모리 공간의 값을 변경한다.
	if p1 != nil {
		fmt.Printf("a의 값: %d\n", a)
	}
}

/*
📌 포인터는 메모리 주소를 값으로 갖는 타입이다, 포인터를 이용하면 동일한 메모리 공간을 여러 변수가 가리킬 수 있다.

📌 포인터를 이용하면 메모리 복사를 줄일 수 있다.
📌 포인터를 이용하면 반환값 없이 변숫값을 바꿀 수 있다.

📌 포인터 변숫값을 초기화하지 않으면 기본값은 nil
📌 정확한 의미는 유효하지 않은 메모리 주솟값 즉, 어떤 메모리 공간도 가리키고 있지 않음을 나타낸다.
*/
